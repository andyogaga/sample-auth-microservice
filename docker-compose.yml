version: "3.7"

services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    # restart: always
    ports:
      - "3001:3001"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./broker-service/.env
    networks:
      - alpha
    depends_on:
      - postgres
      - rabbitmq

  accounts-service:
    build:
      context: ./accounts-service
      dockerfile: ./accounts-service.dockerfile
    # restart: always
    networks:
      - alpha
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./accounts-service/.env
    depends_on:
      - broker-service
      - postgres

  listener-service:
    build:
      context: ./listener-service
      dockerfile: ./listener-service.dockerfile
    # restart: always
    networks:
      - alpha
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - broker-service

  users-service:
    build:
      context: ./users-service
      dockerfile: ./users-service.dockerfile
    # restart: always
    networks:
      - alpha
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./users-service/.env
    depends_on:
      - broker-service
      - postgres

  postgres:
    image: "postgres:15.3-alpine"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      # POSTGRES_DB: kendi_db
    networks:
      - alpha
    volumes:
      - ./project/db-data/postgres/:/var/lib/postgresql/data/

  rabbitmq:
    image: "rabbitmq:3.11-alpine"
    ports:
      # The standard AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
    networks:
      - alpha
    volumes:
      - ./project/db-data/rabbitmq/:/var/lib/rabbitmq

networks:
  alpha:
